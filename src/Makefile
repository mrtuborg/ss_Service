# Makefile.in generated by automake 1.11.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.




pkgdatadir = $(datadir)/r168
pkgincludedir = $(includedir)/r168
pkglibdir = $(libdir)/r168
pkglibexecdir = $(libexecdir)/r168
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
bin_PROGRAMS = ss_Service$(EXEEXT)
subdir = src
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in \
	$(srcdir)/auto_config.h.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = auto_config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
am__installdirs = "$(DESTDIR)$(bindir)"
PROGRAMS = $(bin_PROGRAMS)
am_ss_Service_OBJECTS = main.$(OBJEXT) global.$(OBJEXT) \
	carg_parser.$(OBJEXT) console_out.$(OBJEXT) \
	srvAppLayer.$(OBJEXT) FunctionNode.$(OBJEXT) \
	param_desc.$(OBJEXT) CommonFuncsMgr.$(OBJEXT) \
	SpecFuncsMgr.$(OBJEXT) functions.$(OBJEXT) ssBuffer.$(OBJEXT) \
	buffer.$(OBJEXT) SIG_handler.$(OBJEXT) deqUdp.$(OBJEXT) \
	crc16.$(OBJEXT) udp_port.$(OBJEXT) rcsCmd.$(OBJEXT) \
	job.$(OBJEXT) schedule.$(OBJEXT) ortsTypes.$(OBJEXT)
ss_Service_OBJECTS = $(am_ss_Service_OBJECTS)
ss_Service_LDADD = $(LDADD)
ss_Service_LINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) \
	$(ss_Service_LDFLAGS) $(LDFLAGS) -o $@
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
SOURCES = $(ss_Service_SOURCES)
DIST_SOURCES = $(ss_Service_SOURCES)
ETAGS = etags
CTAGS = ctags
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /Users/tuborg/workspace/ss_Service/missing --run aclocal-1.11
AMTAR = ${SHELL} /Users/tuborg/workspace/ss_Service/missing --run tar
AUTOCONF = ${SHELL} /Users/tuborg/workspace/ss_Service/missing --run autoconf
AUTOHEADER = ${SHELL} /Users/tuborg/workspace/ss_Service/missing --run autoheader
AUTOMAKE = ${SHELL} /Users/tuborg/workspace/ss_Service/missing --run automake-1.11
AWK = awk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -g -O2
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
ECHO_C = \c
ECHO_N = 
ECHO_T = 
EGREP = /usr/bin/grep -E
EXEEXT = 
GREP = /usr/bin/grep
INSTALL = /opt/local/bin/ginstall -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LTLIBOBJS = 
MAKEINFO = ${SHELL} /Users/tuborg/workspace/ss_Service/missing --run makeinfo
MKDIR_P = /opt/local/bin/gmkdir -p
OBJEXT = o
PACKAGE = r168
PACKAGE_BUGREPORT = nosenko@rec-etu.com
PACKAGE_NAME = src/main.cpp
PACKAGE_STRING = src/main.cpp 0.1
PACKAGE_TARNAME = src-main-cpp
PACKAGE_URL = 
PACKAGE_VERSION = 0.1
PATH_SEPARATOR = :
SET_MAKE = 
SHELL = /bin/sh
STRIP = 
VERSION = 0.1
abs_builddir = /Users/tuborg/workspace/ss_Service/src
abs_srcdir = /Users/tuborg/workspace/ss_Service/src
abs_top_builddir = /Users/tuborg/workspace/ss_Service
abs_top_srcdir = /Users/tuborg/workspace/ss_Service
ac_ct_CC = gcc
ac_ct_CXX = g++
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build_alias = 
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host_alias = 
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /Users/tuborg/workspace/ss_Service/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /opt/local/bin/gmkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
ss_Service_SOURCES = main.cpp global.cpp arg_parser/carg_parser.cpp  \
				console_out.cpp \
				auto_config.h\
				srvAppLayer/srvAppLayer.cpp\
				srvAppLayer/FunctionNode/FunctionNode.cpp\
				srvAppLayer/FunctionNode/param_desc.cpp\
				Functions/CommonFuncsMgr.cpp\
				Functions/SpecFuncsMgr.cpp\
				Functions/functions.cpp\
				buffer/ssBuffer.cpp\
				buffer/buffer.cpp\
				console_out.h\
				global.h\
				arg_parser/carg_parser.h\
				ICAppLayer/ICAppLayer.h\
				ICAppLayer/FunctionNode/param_desc.h\
				Functions/CommonFuncs.h\
				Functions/SpecFuncs.h\
				Functions/functions.h\
				SIG_handler.cpp\
				SIG_handler.h\
				deqUdp/deqUdp.cpp deqUdp/deqUdp.h\
				../../rcsLib/crc/crc16.cpp ../../rcsLib/crc/crc16.h\
				../../rcsLib/udp_port/udp_port.cpp ../../rcsLib/udp_port/udp_port.h\
				../../rcsLib/rcsCmd/rcsCmd.cpp ../../rcsLib/rcsCmd/rcsCmd.h\
schedule/job.cpp\
schedule/job.h\
schedule/schedule.cpp\
schedule/schedule.h\
../../rcsLib/ortsTypes/ortsTypes.cpp\
../../rcsLib/ortsTypes/ortsTypes.h

ss_Service_LDFLAGS = -pthread
all: auto_config.h
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu src/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

auto_config.h: stamp-h1
	@if test ! -f $@; then \
	  rm -f stamp-h1; \
	  $(MAKE) $(AM_MAKEFLAGS) stamp-h1; \
	else :; fi

stamp-h1: $(srcdir)/auto_config.h.in $(top_builddir)/config.status
	@rm -f stamp-h1
	cd $(top_builddir) && $(SHELL) ./config.status src/auto_config.h
$(srcdir)/auto_config.h.in:  $(am__configure_deps) 
	($(am__cd) $(top_srcdir) && $(AUTOHEADER))
	rm -f stamp-h1
	touch $@

distclean-hdr:
	-rm -f auto_config.h stamp-h1
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	for p in $$list; do echo "$$p $$p"; done | \
	sed 's/$(EXEEXT)$$//' | \
	while read p p1; do if test -f $$p; \
	  then echo "$$p"; echo "$$p"; else :; fi; \
	done | \
	sed -e 'p;s,.*/,,;n;h' -e 's|.*|.|' \
	    -e 'p;x;s,.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/' | \
	sed 'N;N;N;s,\n, ,g' | \
	$(AWK) 'BEGIN { files["."] = ""; dirs["."] = 1 } \
	  { d=$$3; if (dirs[d] != 1) { print "d", d; dirs[d] = 1 } \
	    if ($$2 == $$4) files[d] = files[d] " " $$1; \
	    else { print "f", $$3 "/" $$4, $$1; } } \
	  END { for (d in files) print "f", d, files[d] }' | \
	while read type dir files; do \
	    if test "$$dir" = .; then dir=; else dir=/$$dir; fi; \
	    test -z "$$files" || { \
	      echo " $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files '$(DESTDIR)$(bindir)$$dir'"; \
	      $(INSTALL_PROGRAM_ENV) $(INSTALL_PROGRAM) $$files "$(DESTDIR)$(bindir)$$dir" || exit $$?; \
	    } \
	; done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; test -n "$(bindir)" || list=; \
	files=`for p in $$list; do echo "$$p"; done | \
	  sed -e 'h;s,^.*/,,;s/$(EXEEXT)$$//;$(transform)' \
	      -e 's/$$/$(EXEEXT)/' `; \
	test -n "$$list" || exit 0; \
	echo " ( cd '$(DESTDIR)$(bindir)' && rm -f" $$files ")"; \
	cd "$(DESTDIR)$(bindir)" && rm -f $$files

clean-binPROGRAMS:
	-test -z "$(bin_PROGRAMS)" || rm -f $(bin_PROGRAMS)
ss_Service$(EXEEXT): $(ss_Service_OBJECTS) $(ss_Service_DEPENDENCIES) 
	@rm -f ss_Service$(EXEEXT)
	$(ss_Service_LINK) $(ss_Service_OBJECTS) $(ss_Service_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/CommonFuncsMgr.Po
include ./$(DEPDIR)/FunctionNode.Po
include ./$(DEPDIR)/SIG_handler.Po
include ./$(DEPDIR)/SpecFuncsMgr.Po
include ./$(DEPDIR)/buffer.Po
include ./$(DEPDIR)/carg_parser.Po
include ./$(DEPDIR)/console_out.Po
include ./$(DEPDIR)/crc16.Po
include ./$(DEPDIR)/deqUdp.Po
include ./$(DEPDIR)/functions.Po
include ./$(DEPDIR)/global.Po
include ./$(DEPDIR)/job.Po
include ./$(DEPDIR)/main.Po
include ./$(DEPDIR)/ortsTypes.Po
include ./$(DEPDIR)/param_desc.Po
include ./$(DEPDIR)/rcsCmd.Po
include ./$(DEPDIR)/schedule.Po
include ./$(DEPDIR)/srvAppLayer.Po
include ./$(DEPDIR)/ssBuffer.Po
include ./$(DEPDIR)/udp_port.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

carg_parser.o: arg_parser/carg_parser.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT carg_parser.o -MD -MP -MF $(DEPDIR)/carg_parser.Tpo -c -o carg_parser.o `test -f 'arg_parser/carg_parser.cpp' || echo '$(srcdir)/'`arg_parser/carg_parser.cpp
	$(am__mv) $(DEPDIR)/carg_parser.Tpo $(DEPDIR)/carg_parser.Po
#	source='arg_parser/carg_parser.cpp' object='carg_parser.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o carg_parser.o `test -f 'arg_parser/carg_parser.cpp' || echo '$(srcdir)/'`arg_parser/carg_parser.cpp

carg_parser.obj: arg_parser/carg_parser.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT carg_parser.obj -MD -MP -MF $(DEPDIR)/carg_parser.Tpo -c -o carg_parser.obj `if test -f 'arg_parser/carg_parser.cpp'; then $(CYGPATH_W) 'arg_parser/carg_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/arg_parser/carg_parser.cpp'; fi`
	$(am__mv) $(DEPDIR)/carg_parser.Tpo $(DEPDIR)/carg_parser.Po
#	source='arg_parser/carg_parser.cpp' object='carg_parser.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o carg_parser.obj `if test -f 'arg_parser/carg_parser.cpp'; then $(CYGPATH_W) 'arg_parser/carg_parser.cpp'; else $(CYGPATH_W) '$(srcdir)/arg_parser/carg_parser.cpp'; fi`

srvAppLayer.o: srvAppLayer/srvAppLayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT srvAppLayer.o -MD -MP -MF $(DEPDIR)/srvAppLayer.Tpo -c -o srvAppLayer.o `test -f 'srvAppLayer/srvAppLayer.cpp' || echo '$(srcdir)/'`srvAppLayer/srvAppLayer.cpp
	$(am__mv) $(DEPDIR)/srvAppLayer.Tpo $(DEPDIR)/srvAppLayer.Po
#	source='srvAppLayer/srvAppLayer.cpp' object='srvAppLayer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o srvAppLayer.o `test -f 'srvAppLayer/srvAppLayer.cpp' || echo '$(srcdir)/'`srvAppLayer/srvAppLayer.cpp

srvAppLayer.obj: srvAppLayer/srvAppLayer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT srvAppLayer.obj -MD -MP -MF $(DEPDIR)/srvAppLayer.Tpo -c -o srvAppLayer.obj `if test -f 'srvAppLayer/srvAppLayer.cpp'; then $(CYGPATH_W) 'srvAppLayer/srvAppLayer.cpp'; else $(CYGPATH_W) '$(srcdir)/srvAppLayer/srvAppLayer.cpp'; fi`
	$(am__mv) $(DEPDIR)/srvAppLayer.Tpo $(DEPDIR)/srvAppLayer.Po
#	source='srvAppLayer/srvAppLayer.cpp' object='srvAppLayer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o srvAppLayer.obj `if test -f 'srvAppLayer/srvAppLayer.cpp'; then $(CYGPATH_W) 'srvAppLayer/srvAppLayer.cpp'; else $(CYGPATH_W) '$(srcdir)/srvAppLayer/srvAppLayer.cpp'; fi`

FunctionNode.o: srvAppLayer/FunctionNode/FunctionNode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FunctionNode.o -MD -MP -MF $(DEPDIR)/FunctionNode.Tpo -c -o FunctionNode.o `test -f 'srvAppLayer/FunctionNode/FunctionNode.cpp' || echo '$(srcdir)/'`srvAppLayer/FunctionNode/FunctionNode.cpp
	$(am__mv) $(DEPDIR)/FunctionNode.Tpo $(DEPDIR)/FunctionNode.Po
#	source='srvAppLayer/FunctionNode/FunctionNode.cpp' object='FunctionNode.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FunctionNode.o `test -f 'srvAppLayer/FunctionNode/FunctionNode.cpp' || echo '$(srcdir)/'`srvAppLayer/FunctionNode/FunctionNode.cpp

FunctionNode.obj: srvAppLayer/FunctionNode/FunctionNode.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT FunctionNode.obj -MD -MP -MF $(DEPDIR)/FunctionNode.Tpo -c -o FunctionNode.obj `if test -f 'srvAppLayer/FunctionNode/FunctionNode.cpp'; then $(CYGPATH_W) 'srvAppLayer/FunctionNode/FunctionNode.cpp'; else $(CYGPATH_W) '$(srcdir)/srvAppLayer/FunctionNode/FunctionNode.cpp'; fi`
	$(am__mv) $(DEPDIR)/FunctionNode.Tpo $(DEPDIR)/FunctionNode.Po
#	source='srvAppLayer/FunctionNode/FunctionNode.cpp' object='FunctionNode.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o FunctionNode.obj `if test -f 'srvAppLayer/FunctionNode/FunctionNode.cpp'; then $(CYGPATH_W) 'srvAppLayer/FunctionNode/FunctionNode.cpp'; else $(CYGPATH_W) '$(srcdir)/srvAppLayer/FunctionNode/FunctionNode.cpp'; fi`

param_desc.o: srvAppLayer/FunctionNode/param_desc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT param_desc.o -MD -MP -MF $(DEPDIR)/param_desc.Tpo -c -o param_desc.o `test -f 'srvAppLayer/FunctionNode/param_desc.cpp' || echo '$(srcdir)/'`srvAppLayer/FunctionNode/param_desc.cpp
	$(am__mv) $(DEPDIR)/param_desc.Tpo $(DEPDIR)/param_desc.Po
#	source='srvAppLayer/FunctionNode/param_desc.cpp' object='param_desc.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o param_desc.o `test -f 'srvAppLayer/FunctionNode/param_desc.cpp' || echo '$(srcdir)/'`srvAppLayer/FunctionNode/param_desc.cpp

param_desc.obj: srvAppLayer/FunctionNode/param_desc.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT param_desc.obj -MD -MP -MF $(DEPDIR)/param_desc.Tpo -c -o param_desc.obj `if test -f 'srvAppLayer/FunctionNode/param_desc.cpp'; then $(CYGPATH_W) 'srvAppLayer/FunctionNode/param_desc.cpp'; else $(CYGPATH_W) '$(srcdir)/srvAppLayer/FunctionNode/param_desc.cpp'; fi`
	$(am__mv) $(DEPDIR)/param_desc.Tpo $(DEPDIR)/param_desc.Po
#	source='srvAppLayer/FunctionNode/param_desc.cpp' object='param_desc.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o param_desc.obj `if test -f 'srvAppLayer/FunctionNode/param_desc.cpp'; then $(CYGPATH_W) 'srvAppLayer/FunctionNode/param_desc.cpp'; else $(CYGPATH_W) '$(srcdir)/srvAppLayer/FunctionNode/param_desc.cpp'; fi`

CommonFuncsMgr.o: Functions/CommonFuncsMgr.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CommonFuncsMgr.o -MD -MP -MF $(DEPDIR)/CommonFuncsMgr.Tpo -c -o CommonFuncsMgr.o `test -f 'Functions/CommonFuncsMgr.cpp' || echo '$(srcdir)/'`Functions/CommonFuncsMgr.cpp
	$(am__mv) $(DEPDIR)/CommonFuncsMgr.Tpo $(DEPDIR)/CommonFuncsMgr.Po
#	source='Functions/CommonFuncsMgr.cpp' object='CommonFuncsMgr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CommonFuncsMgr.o `test -f 'Functions/CommonFuncsMgr.cpp' || echo '$(srcdir)/'`Functions/CommonFuncsMgr.cpp

CommonFuncsMgr.obj: Functions/CommonFuncsMgr.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT CommonFuncsMgr.obj -MD -MP -MF $(DEPDIR)/CommonFuncsMgr.Tpo -c -o CommonFuncsMgr.obj `if test -f 'Functions/CommonFuncsMgr.cpp'; then $(CYGPATH_W) 'Functions/CommonFuncsMgr.cpp'; else $(CYGPATH_W) '$(srcdir)/Functions/CommonFuncsMgr.cpp'; fi`
	$(am__mv) $(DEPDIR)/CommonFuncsMgr.Tpo $(DEPDIR)/CommonFuncsMgr.Po
#	source='Functions/CommonFuncsMgr.cpp' object='CommonFuncsMgr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o CommonFuncsMgr.obj `if test -f 'Functions/CommonFuncsMgr.cpp'; then $(CYGPATH_W) 'Functions/CommonFuncsMgr.cpp'; else $(CYGPATH_W) '$(srcdir)/Functions/CommonFuncsMgr.cpp'; fi`

SpecFuncsMgr.o: Functions/SpecFuncsMgr.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SpecFuncsMgr.o -MD -MP -MF $(DEPDIR)/SpecFuncsMgr.Tpo -c -o SpecFuncsMgr.o `test -f 'Functions/SpecFuncsMgr.cpp' || echo '$(srcdir)/'`Functions/SpecFuncsMgr.cpp
	$(am__mv) $(DEPDIR)/SpecFuncsMgr.Tpo $(DEPDIR)/SpecFuncsMgr.Po
#	source='Functions/SpecFuncsMgr.cpp' object='SpecFuncsMgr.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SpecFuncsMgr.o `test -f 'Functions/SpecFuncsMgr.cpp' || echo '$(srcdir)/'`Functions/SpecFuncsMgr.cpp

SpecFuncsMgr.obj: Functions/SpecFuncsMgr.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT SpecFuncsMgr.obj -MD -MP -MF $(DEPDIR)/SpecFuncsMgr.Tpo -c -o SpecFuncsMgr.obj `if test -f 'Functions/SpecFuncsMgr.cpp'; then $(CYGPATH_W) 'Functions/SpecFuncsMgr.cpp'; else $(CYGPATH_W) '$(srcdir)/Functions/SpecFuncsMgr.cpp'; fi`
	$(am__mv) $(DEPDIR)/SpecFuncsMgr.Tpo $(DEPDIR)/SpecFuncsMgr.Po
#	source='Functions/SpecFuncsMgr.cpp' object='SpecFuncsMgr.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o SpecFuncsMgr.obj `if test -f 'Functions/SpecFuncsMgr.cpp'; then $(CYGPATH_W) 'Functions/SpecFuncsMgr.cpp'; else $(CYGPATH_W) '$(srcdir)/Functions/SpecFuncsMgr.cpp'; fi`

functions.o: Functions/functions.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT functions.o -MD -MP -MF $(DEPDIR)/functions.Tpo -c -o functions.o `test -f 'Functions/functions.cpp' || echo '$(srcdir)/'`Functions/functions.cpp
	$(am__mv) $(DEPDIR)/functions.Tpo $(DEPDIR)/functions.Po
#	source='Functions/functions.cpp' object='functions.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o functions.o `test -f 'Functions/functions.cpp' || echo '$(srcdir)/'`Functions/functions.cpp

functions.obj: Functions/functions.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT functions.obj -MD -MP -MF $(DEPDIR)/functions.Tpo -c -o functions.obj `if test -f 'Functions/functions.cpp'; then $(CYGPATH_W) 'Functions/functions.cpp'; else $(CYGPATH_W) '$(srcdir)/Functions/functions.cpp'; fi`
	$(am__mv) $(DEPDIR)/functions.Tpo $(DEPDIR)/functions.Po
#	source='Functions/functions.cpp' object='functions.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o functions.obj `if test -f 'Functions/functions.cpp'; then $(CYGPATH_W) 'Functions/functions.cpp'; else $(CYGPATH_W) '$(srcdir)/Functions/functions.cpp'; fi`

ssBuffer.o: buffer/ssBuffer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssBuffer.o -MD -MP -MF $(DEPDIR)/ssBuffer.Tpo -c -o ssBuffer.o `test -f 'buffer/ssBuffer.cpp' || echo '$(srcdir)/'`buffer/ssBuffer.cpp
	$(am__mv) $(DEPDIR)/ssBuffer.Tpo $(DEPDIR)/ssBuffer.Po
#	source='buffer/ssBuffer.cpp' object='ssBuffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssBuffer.o `test -f 'buffer/ssBuffer.cpp' || echo '$(srcdir)/'`buffer/ssBuffer.cpp

ssBuffer.obj: buffer/ssBuffer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ssBuffer.obj -MD -MP -MF $(DEPDIR)/ssBuffer.Tpo -c -o ssBuffer.obj `if test -f 'buffer/ssBuffer.cpp'; then $(CYGPATH_W) 'buffer/ssBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/buffer/ssBuffer.cpp'; fi`
	$(am__mv) $(DEPDIR)/ssBuffer.Tpo $(DEPDIR)/ssBuffer.Po
#	source='buffer/ssBuffer.cpp' object='ssBuffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ssBuffer.obj `if test -f 'buffer/ssBuffer.cpp'; then $(CYGPATH_W) 'buffer/ssBuffer.cpp'; else $(CYGPATH_W) '$(srcdir)/buffer/ssBuffer.cpp'; fi`

buffer.o: buffer/buffer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT buffer.o -MD -MP -MF $(DEPDIR)/buffer.Tpo -c -o buffer.o `test -f 'buffer/buffer.cpp' || echo '$(srcdir)/'`buffer/buffer.cpp
	$(am__mv) $(DEPDIR)/buffer.Tpo $(DEPDIR)/buffer.Po
#	source='buffer/buffer.cpp' object='buffer.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o buffer.o `test -f 'buffer/buffer.cpp' || echo '$(srcdir)/'`buffer/buffer.cpp

buffer.obj: buffer/buffer.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT buffer.obj -MD -MP -MF $(DEPDIR)/buffer.Tpo -c -o buffer.obj `if test -f 'buffer/buffer.cpp'; then $(CYGPATH_W) 'buffer/buffer.cpp'; else $(CYGPATH_W) '$(srcdir)/buffer/buffer.cpp'; fi`
	$(am__mv) $(DEPDIR)/buffer.Tpo $(DEPDIR)/buffer.Po
#	source='buffer/buffer.cpp' object='buffer.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o buffer.obj `if test -f 'buffer/buffer.cpp'; then $(CYGPATH_W) 'buffer/buffer.cpp'; else $(CYGPATH_W) '$(srcdir)/buffer/buffer.cpp'; fi`

deqUdp.o: deqUdp/deqUdp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT deqUdp.o -MD -MP -MF $(DEPDIR)/deqUdp.Tpo -c -o deqUdp.o `test -f 'deqUdp/deqUdp.cpp' || echo '$(srcdir)/'`deqUdp/deqUdp.cpp
	$(am__mv) $(DEPDIR)/deqUdp.Tpo $(DEPDIR)/deqUdp.Po
#	source='deqUdp/deqUdp.cpp' object='deqUdp.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o deqUdp.o `test -f 'deqUdp/deqUdp.cpp' || echo '$(srcdir)/'`deqUdp/deqUdp.cpp

deqUdp.obj: deqUdp/deqUdp.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT deqUdp.obj -MD -MP -MF $(DEPDIR)/deqUdp.Tpo -c -o deqUdp.obj `if test -f 'deqUdp/deqUdp.cpp'; then $(CYGPATH_W) 'deqUdp/deqUdp.cpp'; else $(CYGPATH_W) '$(srcdir)/deqUdp/deqUdp.cpp'; fi`
	$(am__mv) $(DEPDIR)/deqUdp.Tpo $(DEPDIR)/deqUdp.Po
#	source='deqUdp/deqUdp.cpp' object='deqUdp.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o deqUdp.obj `if test -f 'deqUdp/deqUdp.cpp'; then $(CYGPATH_W) 'deqUdp/deqUdp.cpp'; else $(CYGPATH_W) '$(srcdir)/deqUdp/deqUdp.cpp'; fi`

crc16.o: ../../rcsLib/crc/crc16.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crc16.o -MD -MP -MF $(DEPDIR)/crc16.Tpo -c -o crc16.o `test -f '../../rcsLib/crc/crc16.cpp' || echo '$(srcdir)/'`../../rcsLib/crc/crc16.cpp
	$(am__mv) $(DEPDIR)/crc16.Tpo $(DEPDIR)/crc16.Po
#	source='../../rcsLib/crc/crc16.cpp' object='crc16.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crc16.o `test -f '../../rcsLib/crc/crc16.cpp' || echo '$(srcdir)/'`../../rcsLib/crc/crc16.cpp

crc16.obj: ../../rcsLib/crc/crc16.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT crc16.obj -MD -MP -MF $(DEPDIR)/crc16.Tpo -c -o crc16.obj `if test -f '../../rcsLib/crc/crc16.cpp'; then $(CYGPATH_W) '../../rcsLib/crc/crc16.cpp'; else $(CYGPATH_W) '$(srcdir)/../../rcsLib/crc/crc16.cpp'; fi`
	$(am__mv) $(DEPDIR)/crc16.Tpo $(DEPDIR)/crc16.Po
#	source='../../rcsLib/crc/crc16.cpp' object='crc16.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o crc16.obj `if test -f '../../rcsLib/crc/crc16.cpp'; then $(CYGPATH_W) '../../rcsLib/crc/crc16.cpp'; else $(CYGPATH_W) '$(srcdir)/../../rcsLib/crc/crc16.cpp'; fi`

udp_port.o: ../../rcsLib/udp_port/udp_port.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT udp_port.o -MD -MP -MF $(DEPDIR)/udp_port.Tpo -c -o udp_port.o `test -f '../../rcsLib/udp_port/udp_port.cpp' || echo '$(srcdir)/'`../../rcsLib/udp_port/udp_port.cpp
	$(am__mv) $(DEPDIR)/udp_port.Tpo $(DEPDIR)/udp_port.Po
#	source='../../rcsLib/udp_port/udp_port.cpp' object='udp_port.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o udp_port.o `test -f '../../rcsLib/udp_port/udp_port.cpp' || echo '$(srcdir)/'`../../rcsLib/udp_port/udp_port.cpp

udp_port.obj: ../../rcsLib/udp_port/udp_port.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT udp_port.obj -MD -MP -MF $(DEPDIR)/udp_port.Tpo -c -o udp_port.obj `if test -f '../../rcsLib/udp_port/udp_port.cpp'; then $(CYGPATH_W) '../../rcsLib/udp_port/udp_port.cpp'; else $(CYGPATH_W) '$(srcdir)/../../rcsLib/udp_port/udp_port.cpp'; fi`
	$(am__mv) $(DEPDIR)/udp_port.Tpo $(DEPDIR)/udp_port.Po
#	source='../../rcsLib/udp_port/udp_port.cpp' object='udp_port.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o udp_port.obj `if test -f '../../rcsLib/udp_port/udp_port.cpp'; then $(CYGPATH_W) '../../rcsLib/udp_port/udp_port.cpp'; else $(CYGPATH_W) '$(srcdir)/../../rcsLib/udp_port/udp_port.cpp'; fi`

rcsCmd.o: ../../rcsLib/rcsCmd/rcsCmd.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rcsCmd.o -MD -MP -MF $(DEPDIR)/rcsCmd.Tpo -c -o rcsCmd.o `test -f '../../rcsLib/rcsCmd/rcsCmd.cpp' || echo '$(srcdir)/'`../../rcsLib/rcsCmd/rcsCmd.cpp
	$(am__mv) $(DEPDIR)/rcsCmd.Tpo $(DEPDIR)/rcsCmd.Po
#	source='../../rcsLib/rcsCmd/rcsCmd.cpp' object='rcsCmd.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rcsCmd.o `test -f '../../rcsLib/rcsCmd/rcsCmd.cpp' || echo '$(srcdir)/'`../../rcsLib/rcsCmd/rcsCmd.cpp

rcsCmd.obj: ../../rcsLib/rcsCmd/rcsCmd.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT rcsCmd.obj -MD -MP -MF $(DEPDIR)/rcsCmd.Tpo -c -o rcsCmd.obj `if test -f '../../rcsLib/rcsCmd/rcsCmd.cpp'; then $(CYGPATH_W) '../../rcsLib/rcsCmd/rcsCmd.cpp'; else $(CYGPATH_W) '$(srcdir)/../../rcsLib/rcsCmd/rcsCmd.cpp'; fi`
	$(am__mv) $(DEPDIR)/rcsCmd.Tpo $(DEPDIR)/rcsCmd.Po
#	source='../../rcsLib/rcsCmd/rcsCmd.cpp' object='rcsCmd.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o rcsCmd.obj `if test -f '../../rcsLib/rcsCmd/rcsCmd.cpp'; then $(CYGPATH_W) '../../rcsLib/rcsCmd/rcsCmd.cpp'; else $(CYGPATH_W) '$(srcdir)/../../rcsLib/rcsCmd/rcsCmd.cpp'; fi`

job.o: schedule/job.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT job.o -MD -MP -MF $(DEPDIR)/job.Tpo -c -o job.o `test -f 'schedule/job.cpp' || echo '$(srcdir)/'`schedule/job.cpp
	$(am__mv) $(DEPDIR)/job.Tpo $(DEPDIR)/job.Po
#	source='schedule/job.cpp' object='job.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o job.o `test -f 'schedule/job.cpp' || echo '$(srcdir)/'`schedule/job.cpp

job.obj: schedule/job.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT job.obj -MD -MP -MF $(DEPDIR)/job.Tpo -c -o job.obj `if test -f 'schedule/job.cpp'; then $(CYGPATH_W) 'schedule/job.cpp'; else $(CYGPATH_W) '$(srcdir)/schedule/job.cpp'; fi`
	$(am__mv) $(DEPDIR)/job.Tpo $(DEPDIR)/job.Po
#	source='schedule/job.cpp' object='job.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o job.obj `if test -f 'schedule/job.cpp'; then $(CYGPATH_W) 'schedule/job.cpp'; else $(CYGPATH_W) '$(srcdir)/schedule/job.cpp'; fi`

schedule.o: schedule/schedule.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT schedule.o -MD -MP -MF $(DEPDIR)/schedule.Tpo -c -o schedule.o `test -f 'schedule/schedule.cpp' || echo '$(srcdir)/'`schedule/schedule.cpp
	$(am__mv) $(DEPDIR)/schedule.Tpo $(DEPDIR)/schedule.Po
#	source='schedule/schedule.cpp' object='schedule.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o schedule.o `test -f 'schedule/schedule.cpp' || echo '$(srcdir)/'`schedule/schedule.cpp

schedule.obj: schedule/schedule.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT schedule.obj -MD -MP -MF $(DEPDIR)/schedule.Tpo -c -o schedule.obj `if test -f 'schedule/schedule.cpp'; then $(CYGPATH_W) 'schedule/schedule.cpp'; else $(CYGPATH_W) '$(srcdir)/schedule/schedule.cpp'; fi`
	$(am__mv) $(DEPDIR)/schedule.Tpo $(DEPDIR)/schedule.Po
#	source='schedule/schedule.cpp' object='schedule.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o schedule.obj `if test -f 'schedule/schedule.cpp'; then $(CYGPATH_W) 'schedule/schedule.cpp'; else $(CYGPATH_W) '$(srcdir)/schedule/schedule.cpp'; fi`

ortsTypes.o: ../../rcsLib/ortsTypes/ortsTypes.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ortsTypes.o -MD -MP -MF $(DEPDIR)/ortsTypes.Tpo -c -o ortsTypes.o `test -f '../../rcsLib/ortsTypes/ortsTypes.cpp' || echo '$(srcdir)/'`../../rcsLib/ortsTypes/ortsTypes.cpp
	$(am__mv) $(DEPDIR)/ortsTypes.Tpo $(DEPDIR)/ortsTypes.Po
#	source='../../rcsLib/ortsTypes/ortsTypes.cpp' object='ortsTypes.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ortsTypes.o `test -f '../../rcsLib/ortsTypes/ortsTypes.cpp' || echo '$(srcdir)/'`../../rcsLib/ortsTypes/ortsTypes.cpp

ortsTypes.obj: ../../rcsLib/ortsTypes/ortsTypes.cpp
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -MT ortsTypes.obj -MD -MP -MF $(DEPDIR)/ortsTypes.Tpo -c -o ortsTypes.obj `if test -f '../../rcsLib/ortsTypes/ortsTypes.cpp'; then $(CYGPATH_W) '../../rcsLib/ortsTypes/ortsTypes.cpp'; else $(CYGPATH_W) '$(srcdir)/../../rcsLib/ortsTypes/ortsTypes.cpp'; fi`
	$(am__mv) $(DEPDIR)/ortsTypes.Tpo $(DEPDIR)/ortsTypes.Po
#	source='../../rcsLib/ortsTypes/ortsTypes.cpp' object='ortsTypes.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o ortsTypes.obj `if test -f '../../rcsLib/ortsTypes/ortsTypes.cpp'; then $(CYGPATH_W) '../../rcsLib/ortsTypes/ortsTypes.cpp'; else $(CYGPATH_W) '$(srcdir)/../../rcsLib/ortsTypes/ortsTypes.cpp'; fi`

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES) auto_config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) auto_config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES) auto_config.h.in $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS) auto_config.h.in $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS) auto_config.h
installdirs:
	for dir in "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-binPROGRAMS clean-generic mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-hdr distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am: install-binPROGRAMS

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am: uninstall-binPROGRAMS

.MAKE: all install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-am clean clean-binPROGRAMS \
	clean-generic ctags distclean distclean-compile \
	distclean-generic distclean-hdr distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-binPROGRAMS install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic pdf pdf-am ps ps-am \
	tags uninstall uninstall-am uninstall-binPROGRAMS


# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
